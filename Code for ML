import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor, AdaBoostRegressor
from sklearn.metrics import mean_squared_error, root_mean_squared_error

# Load the soil moisture dataset
data = pd.read_csv('soil_moisture_data.csv')

# Separate features and target
X = data.drop('soil_moisture', axis=1)
y = data['soil_moisture']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train Random Forest model
rf_model = RandomForestRegressor()
rf_model.fit(X_train, y_train)

# Make predictions on the test set
rf_predictions = rf_model.predict(X_test)

# Calculate RMSE and MSE for Random Forest
rf_rmse = root_mean_squared_error(y_test, rf_predictions)
rf_mse = mean_squared_error(y_test, rf_predictions)

print('Random Forest RMSE:', rf_rmse)
print('Random Forest MSE:', rf_mse)

# Create and train Gradient Boosting model
gb_model = GradientBoostingRegressor()
gb_model.fit(X_train, y_train)

# Make predictions on the test set
gb_predictions = gb_model.predict(X_test)

# Calculate RMSE and MSE for Gradient Boosting
gb_rmse = root_mean_squared_error(y_test, gb_predictions)
gb_mse = mean_squared_error(y_test, gb_predictions)

print('Gradient Boosting RMSE:', gb_rmse)
print('Gradient Boosting MSE:', gb_mse)

# Create and train AdaBoost model
ada_model = AdaBoostRegressor()
ada_model.fit(X_train, y_train)

# Make predictions on the test set
ada_predictions = ada_model.predict(X_test)

# Calculate RMSE and MSE for AdaBoost
ada_rmse = root_mean_squared_error(y_test, ada_predictions)
ada_mse = mean_squared_error(y_test, ada_predictions)

print('AdaBoost RMSE:', ada_rmse)
print('AdaBoost MSE:', ada_mse)
